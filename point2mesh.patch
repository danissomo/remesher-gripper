diff --git a/models/layers/mesh.py b/models/layers/mesh.py
index 1b26519..6dd922b 100644
--- a/models/layers/mesh.py
+++ b/models/layers/mesh.py
@@ -364,7 +364,7 @@ class PartMesh:
         for i in range(self.n_submeshes):
             mask = torch.zeros(self.main_mesh.edges.shape[0]).long()
             for face in self.sub_mesh[i].faces:
-                face = self.sub_mesh_index[i][face].to(face.device).long()
+                face = self.sub_mesh_index[i][face.to('cpu')].to(face.device).long()
                 for j in range(3):
                     e = tuple(sorted([face[j].item(), face[(j + 1) % 3].item()]))
                     mask[vse[e]] = 1
@@ -424,7 +424,7 @@ class PartMesh:
         :param mesh: the mesh to sub
         :return: the new submesh
         """
-        vs_mask = torch.zeros(mesh.vs.shape[0])
+        vs_mask = torch.zeros(mesh.vs.shape[0]).to('cuda')
         vs_mask[vs_index] = 1
         faces_mask = vs_mask[mesh.faces].sum(dim=-1) > 0
         new_faces = mesh.faces[faces_mask].clone()
@@ -435,7 +435,7 @@ class PartMesh:
         new_vs = mesh.vs[new_vs_index, :].clone()
         vs_mask = torch.zeros(mesh.vs.shape[0])
         vs_mask[new_vs_index] = 1
-        cummusum = torch.cumsum(1 - vs_mask, dim=0)
+        cummusum = torch.cumsum(1 - vs_mask, dim=0).to('cuda')
         new_faces -= cummusum[new_faces].to(new_faces.device).long()
         m = Mesh.from_tensor(mesh, new_vs.detach(), new_faces.detach(), gfmm=False)
         return m, new_vs_index
